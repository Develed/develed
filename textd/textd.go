package main

import (
	"fmt"
	"image"
	"image/color"
	"image/png"
	"log"
	"os"
)

type FontMap struct {
	row int
	col int
}

type FontTable struct {
	table map[rune]FontMap
	width int
	high  int
}

func main() {
	if len(os.Args) < 3 {
		fmt.Println("Usage %s: <font (see fonts folder)> text", os.Args[0])
		os.Exit(-1)
	}
	fontName := string(os.Args[1])
	str := string(os.Args[2])

	reader, err := os.Open("fonts/" + fontName + ".png")
	if err != nil {
		log.Fatal(err)
	}
	defer reader.Close()

	font6x8 := map[rune]FontMap{
		' ': {0, 0}, '!': {0, 1}, '"': {0, 2}, '#': {0, 3}, '$': {0, 4}, '%': {0, 5},
		'&': {0, 6}, '\'': {0, 7}, '(': {0, 8}, ')': {0, 9}, '*': {0, 10}, '+': {0, 11},
		',': {0, 12}, '-': {0, 13}, '.': {0, 14}, '/': {0, 15},

		'0': {1, 0}, '1': {1, 1}, '2': {1, 2}, '3': {1, 3}, '4': {1, 4}, '5': {1, 5},
		'6': {1, 6}, '7': {1, 7}, '8': {1, 8}, '9': {1, 9}, ':': {1, 10}, ';': {1, 11},
		'<': {1, 12}, '=': {1, 13}, '>': {1, 14}, '?': {1, 15},

		'@': {2, 0}, 'A': {2, 1}, 'B': {2, 2}, 'C': {2, 3}, 'D': {2, 4}, 'E': {2, 5},
		'F': {2, 6}, 'G': {2, 7}, 'H': {2, 8}, 'I': {2, 9}, 'J': {2, 10}, 'K': {2, 11},
		'L': {2, 12}, 'M': {2, 13}, 'N': {2, 14}, 'O': {2, 15},

		'P': {3, 0}, 'Q': {3, 1}, 'R': {3, 2}, 'S': {3, 3}, 'T': {3, 4}, 'U': {3, 5},
		'V': {3, 6}, 'W': {3, 7}, 'X': {3, 8}, 'Y': {3, 9}, 'Z': {3, 10}, '[': {3, 11},
		'\\': {3, 12}, ']': {3, 13}, '^': {3, 14}, '_': {3, 15},

		'`': {4, 0}, 'a': {4, 1}, 'b': {4, 2}, 'c': {4, 3}, 'd': {4, 4}, 'e': {4, 5},
		'f': {4, 6}, 'g': {4, 7}, 'h': {4, 8}, 'i': {4, 9}, 'j': {4, 10}, 'k': {4, 11},
		'l': {4, 12}, 'm': {4, 13}, 'n': {4, 14}, 'o': {4, 15},

		'p': {5, 0}, 'q': {5, 1}, 'r': {5, 2}, 's': {5, 3}, 't': {5, 4}, 'u': {5, 5},
		'v': {5, 6}, 'w': {5, 7}, 'x': {5, 8}, 'y': {5, 9}, 'z': {5, 10}, '{': {5, 11},
		'|': {6, 12}, '}': {5, 13}, '~': {5, 14}, '±': {5, 15},
	}

	font4x7 := map[rune]FontMap{
		' ': {0, 0}, '!': {0, 1}, '"': {0, 2}, '#': {0, 3}, '$': {0, 4}, '%': {0, 5},
		'&': {0, 6}, '\'': {0, 7}, '(': {0, 8}, ')': {0, 9}, '*': {0, 10}, '+': {0, 11},
		',': {0, 12}, '-': {0, 13}, '.': {0, 14}, '/': {0, 15},

		'0': {0, 16}, '1': {0, 17}, '2': {0, 18}, '3': {0, 19}, '4': {0, 20}, '5': {0, 21},
		'6': {0, 22}, '7': {0, 23}, '8': {0, 24}, '9': {0, 25}, ':': {0, 26}, ';': {0, 27},
		'<': {0, 28}, '=': {0, 29}, '>': {0, 30}, '?': {0, 31},

		'@': {1, 0}, 'A': {1, 1}, 'B': {1, 2}, 'C': {1, 3}, 'D': {1, 4}, 'E': {1, 5},
		'F': {1, 6}, 'G': {1, 7}, 'H': {1, 8}, 'I': {1, 9}, 'J': {1, 10}, 'K': {1, 11},
		'L': {1, 12}, 'M': {1, 13}, 'N': {1, 14}, 'O': {1, 15},

		'P': {1, 16}, 'Q': {1, 17}, 'R': {1, 18}, 'S': {1, 19}, 'T': {1, 20}, 'U': {1, 21},
		'V': {1, 22}, 'W': {1, 23}, 'X': {1, 24}, 'Y': {1, 25}, 'Z': {1, 26}, '[': {1, 27},
		'\\': {1, 28}, ']': {1, 29}, '†': {1, 30}, '_': {1, 31},

		'£': {2, 0}, 'a': {2, 1}, 'b': {2, 2}, 'c': {2, 3}, 'd': {2, 4}, 'e': {2, 5},
		'f': {2, 6}, 'g': {2, 7}, 'h': {2, 8}, 'i': {2, 9}, 'j': {2, 10}, 'k': {2, 11},
		'l': {2, 12}, 'm': {2, 13}, 'n': {2, 14}, 'o': {2, 15},

		'p': {2, 16}, 'q': {2, 17}, 'r': {2, 18}, 's': {2, 19}, 't': {2, 20}, 'u': {2, 21},
		'v': {2, 22}, 'w': {2, 23}, 'x': {2, 24}, 'y': {2, 25}, 'z': {2, 26}, '{': {2, 27},
		'|': {2, 28}, '}': {2, 29}, '~': {2, 30}, '±': {2, 31},
	}

	font6x6 := map[rune]FontMap{
		' ': {0, 0}, '!': {0, 1}, '"': {0, 2}, '#': {0, 3}, '$': {0, 4}, '%': {0, 5},
		'&': {0, 6}, '\'': {0, 7}, '(': {0, 8}, ')': {0, 9}, '*': {0, 10}, '+': {0, 11},
		',': {0, 12}, '-': {0, 13}, '.': {0, 14}, '/': {0, 15},

		'0': {0, 16}, '1': {0, 17}, '2': {0, 18}, '3': {0, 19}, '4': {0, 20}, '5': {0, 21},
		'6': {0, 22}, '7': {0, 23}, '8': {0, 24}, '9': {0, 25}, ':': {0, 26},

		'@': {1, 0}, 'A': {1, 1}, 'B': {1, 2}, 'C': {1, 3}, 'D': {1, 4}, 'E': {1, 5},
		'F': {1, 6}, 'G': {1, 7}, 'H': {1, 8}, 'I': {1, 9}, 'J': {1, 10}, 'K': {1, 11},
		'L': {1, 12}, 'M': {1, 13}, 'N': {1, 14}, 'O': {1, 15},

		'P': {1, 16}, 'Q': {1, 17}, 'R': {1, 18}, 'S': {1, 19}, 'T': {1, 20}, 'U': {1, 21},
		'V': {1, 22}, 'W': {1, 23}, 'X': {1, 24}, 'Y': {1, 25}, 'Z': {1, 26},

		'`': {2, 0}, 'a': {2, 1}, 'b': {2, 2}, 'c': {2, 3}, 'd': {2, 4}, 'e': {2, 5},
		'f': {2, 6}, 'g': {2, 7}, 'h': {2, 8}, 'i': {2, 9}, 'j': {2, 10}, 'k': {2, 11},
		'l': {2, 12}, 'm': {2, 13}, 'n': {2, 14}, 'o': {2, 15},

		'p': {2, 16}, 'q': {2, 17}, 'r': {2, 18}, 's': {2, 19}, 't': {2, 20}, 'u': {2, 21},
		'v': {2, 22}, 'w': {2, 23}, 'x': {2, 24}, 'y': {2, 25}, 'z': {2, 26},
	}

	fontTable := map[string]FontTable{
		"font4x7": {font4x7, 4, 7},
		"font6x6": {font6x6, 6, 6},
		"font6x8": {font6x8, 6, 8},
		"font6x7": {font6x8, 6, 7},
	}

	m, _, err := image.Decode(reader)
	if err != nil {
		log.Fatal(err)
	}
	//bounds := m.Bounds()

	img := image.NewRGBA(image.Rect(0, 0, 39, 9))
	nm := img.Bounds()
	for y := 0; y < nm.Dy(); y++ {
		for x := 0; x < nm.Dx(); x++ {
			img.Set(x, y, color.RGBA{255, 0, 0, 255})
		}
	}

	font := fontTable[fontName]
	for n, key := range str {
		outx := n * font.width
		for y := 0; y < font.high; y++ {
			for x := 0; x < font.width; x++ {
				img.Set(x+outx, y, m.At(x+font.width*font.table[key].col, y+font.high*font.table[key].row))
			}
		}
	}

	// Save to out.png
	f, _ := os.OpenFile("out.png", os.O_WRONLY|os.O_CREATE, 0600)
	defer f.Close()
	png.Encode(f, img)
}
